/* libinftextgtk-0.5.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "InfTextGtk", lower_case_cprefix = "inf_text_gtk_")]
namespace InfTextGtk {
	[CCode (cheader_filename = "libinftextgtk-0.5.h")]
	public class Buffer : GLib.Object, Inf.Buffer, InfText.Buffer {
		[CCode (has_construct_function = false)]
		public Buffer (Gtk.TextBuffer buffer, Inf.UserTable user_table);
		public bool backward_to_author_toggle (Gtk.TextIter iter, out unowned InfText.User user_on, out unowned InfText.User user_off);
		[CCode (cname = "inf_text_gtk_buffer_show_user_colors")]
		public void do_show_user_colors (bool show, Gtk.TextIter start, Gtk.TextIter end);
		public void ensure_author_tags_priority ();
		public bool forward_to_author_toggle (Gtk.TextIter iter, out unowned InfText.User user_on, out unowned InfText.User user_off);
		public unowned InfText.User get_active_user ();
		public unowned InfText.User get_author (Gtk.TextIter location);
		public double get_saturation ();
		public bool get_show_user_colors ();
		public unowned Gtk.TextBuffer get_text_buffer ();
		public unowned InfText.User get_user_for_tag (Gtk.TextTag tag);
		public double get_value ();
		public bool get_wake_on_cursor_movement ();
		public bool is_author_toggle (Gtk.TextIter iter, out unowned InfText.User user_on, out unowned InfText.User user_off);
		public void set_active_user (InfText.User user);
		public void set_saturation_value (double saturation, double value);
		public void set_show_user_colors (bool show);
		public void set_wake_on_cursor_movement (bool wake);
		public InfText.User active_user { get; set; }
		[NoAccessorMethod]
		public Gtk.TextBuffer buffer { owned get; construct; }
		[NoAccessorMethod]
		public double saturation { get; set; }
		public bool show_user_colors { get; set; }
		[NoAccessorMethod]
		public Inf.UserTable user_table { owned get; construct; }
		[NoAccessorMethod]
		public double value { get; set; }
		public bool wake_on_cursor_movement { get; set; }
	}
	[CCode (cheader_filename = "libinftextgtk-0.5.h")]
	public class HueChooser : Gtk.Widget, Atk.Implementor, Gtk.Buildable {
		[CCode (type = "GtkWidget*", has_construct_function = false)]
		public HueChooser ();
		public double get_hue ();
		public void set_hue (double hue);
		[CCode (type = "GtkWidget*", has_construct_function = false)]
		public HueChooser.with_hue (double hue);
		public double hue { get; set construct; }
		public virtual signal void hue_change (double hue);
		public virtual signal void move (Gtk.DirectionType direction);
	}
	[CCode (cheader_filename = "libinftextgtk-0.5.h")]
	public class View : GLib.Object {
		[CCode (has_construct_function = false)]
		public View (Inf.Io io, Gtk.TextView view, Inf.UserTable user_table);
		public unowned InfText.User get_active_user ();
		public unowned Gtk.TextView get_text_view ();
		public unowned Inf.UserTable get_user_table ();
		public void set_active_user (InfText.User user);
		public InfText.User active_user { get; set; }
		[NoAccessorMethod]
		public Inf.Io io { owned get; construct; }
		public Inf.UserTable user_table { get; construct; }
		[NoAccessorMethod]
		public Gtk.TextView view { owned get; construct; }
	}
	[CCode (cheader_filename = "libinftextgtk-0.5.h")]
	public class Viewport : GLib.Object {
		[CCode (has_construct_function = false)]
		public Viewport (Gtk.ScrolledWindow scroll, Inf.UserTable user_table);
		public unowned InfText.User get_active_user ();
		public unowned Gtk.ScrolledWindow get_scrolled_window ();
		public unowned Inf.UserTable get_user_table ();
		public void set_active_user (InfText.User user);
		public InfText.User active_user { get; set; }
		public Gtk.ScrolledWindow scrolled_window { get; construct; }
		public Inf.UserTable user_table { get; construct; }
	}
}
